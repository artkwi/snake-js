{"mappings":"AAAA,IAAIA,EAAoB,CACtB,CAAEC,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,IAGN,MAAMC,EACXC,SAAoBJ,EAEpBI,sBACE,OAAOC,MAAKC,C,CAGdF,oBAAoBE,GAClBD,MAAKC,EAAaA,C,CAGpBF,kBAAqBG,KACOF,KAAKG,eAEXC,MACfC,GAAYA,EAAQT,IAAMM,EAAQN,GAAKS,EAAQR,IAAMK,EAAQL,ICrB/D,MAAMS,EACXP,cAAgB,EAEhBA,mBACE,OAAOC,KAAKO,M,CAGdR,iBAAiBQ,GACfP,KAAKO,OAASA,C,ECHlB,IAAIC,EAAe,CACjBZ,EAAG,EACHC,EAAG,GAGDY,EAAoB,CACtBb,EAAG,EACHC,EAAG,GAGE,MAAMa,EAAkB,IAAMF,EACxBG,EAAuB,IAAMF,EAS7BG,EAAS,KAChBC,EAAQH,MACVJ,EAAOQ,UAAUR,EAAOS,YAAcC,GACtCC,IACAC,IACIC,KACFC,KAGKP,EAAQF,OACfL,EAAOQ,UAAUR,EAAOS,YAAc,EAAIC,GAC1CC,IAbyCR,EAAoB,K,EAkB3DS,EAAc,KAClB,IAAIG,EAAkB,KACtB,KAA2B,OAApBA,GAA4BR,EAAQQ,IAAoBvB,EAAUwB,WAAWD,IAAkB,CAGpGA,EAAkB,C,EAFRE,KAAKC,MAAMD,KAAKE,SAAWC,G,EAC3BH,KAAKC,MAAMD,KAAKE,SAAWC,G,CA5BV,CAACL,IAC7Bb,EAAe,IAAKa,EAAiB,EA+BtCM,CAAgBN,EAAgB,EAG5BF,EAAyB,KAC7B,GAAIR,IACF,OAAO,EAKT,OAFqBY,KAAKC,MAAuB,EAAjBD,KAAKE,UADf,GAGkB,CAAC,EAGrCL,EAAmB,KACvB,IAAIQ,EAAuB,KAC3B,KAAgC,OAAzBA,GAAiCf,EAAQe,IAAyB9B,EAAUwB,WAAWM,IAAuB,CAGnHA,EAAuB,C,EAFbL,KAAKC,MAAMD,KAAKE,SAAWC,G,EAC3BH,KAAKC,MAAMD,KAAKE,SAAWC,G,CA9CL,IAACL,IAkDdO,EAjDpBnB,EAAoB,IAAKY,EAiDgB,ECpErC,IAAIQ,EAAiB,CAAEjC,GAAG,EAAIC,EAAG,GAExCiC,SAASC,iBAAiB,WAAYC,IAEpC,OADYA,EAAEC,KAEZ,IAAK,YAC2B,IAA1BC,IAAoBrC,IACtBgC,EAAiB,CAAEjC,EAAG,EAAGC,GAAG,IAE9B,MACF,IAAK,aAC2B,IAA1BqC,IAAoBrC,IACtBgC,EAAiB,CAAEjC,EAAG,EAAGC,EAAG,IAE9B,MACF,IAAK,UAC2B,IAA1BqC,IAAoBtC,IACtBiC,EAAiB,CAAEjC,GAAG,EAAIC,EAAG,IAE/B,MACF,IAAK,YAC2B,IAA1BqC,IAAoBtC,IACtBiC,EAAiB,CAAEjC,EAAG,EAAGC,EAAG,I,IAQ7B,MAAMqC,EAAoB,IAAML,EC7BvC,IAAIM,EAAgB,CAClB,CAAEvC,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,KAGP,MAAMuC,EAAmB,IAAMD,EACzBE,EAAoBC,GAC9BH,EAAgB,IAAIG,GAEVC,EAAS,KACpB,IAAIC,EAAuB,IAAIJ,KAE/B,MAAMK,EAAiBP,IAEvB,IAAK,IAAIQ,EAAIF,EAAqBG,OAAS,EAAGD,GAAK,EAAGA,IACpDF,EAAqBE,EAAI,GAAK,IAAKF,EAAqBE,IAG1DF,EAAuBA,EAAqBI,MAAM,GAElD,MAAMC,EAAkB,CACtBjD,EAAG4C,EAAqB,GAAG5C,EAAI6C,EAAe7C,EAC9CC,EAAG2C,EAAqB,GAAG3C,EAAI4C,EAAe5C,GAGhDwC,EAAiB,CAACQ,KAAoBL,GAAsB,EAGjD3B,EAAU,CAACX,EAAS4C,KAC/B,IAAK5C,EACH,OAAO,EAKT,SAHsB4C,GAASC,YAC3B,IAAIX,KAAoBQ,MAAM,GAC9BR,KAEYhC,MACXC,GAAYA,EAAQT,IAAMM,EAAQN,GAAKS,EAAQR,IAAMK,EAAQL,GAKtD,EAGDoB,EAAc,KACzB,MAAM+B,EAAgBZ,IACtBY,EAAcA,EAAcL,QAAUK,EAAcA,EAAcL,OAAS,GAC3EN,EAAiBW,EAAc,EC9C3BC,EAAc,CAACC,EAAUC,KAC7B,GAAID,EAAU,CACZ,MAAMtD,EAAEA,EAACC,EAAEA,GAAMqD,EACIpB,SAASsB,uBAC5B,iBAAiBxD,KAAKC,KAGX,GAAGwD,UAAUC,IAAIH,E,GAkDrBI,EAAO,KACbC,EAjBgB,MACrB,IAAK,IAAId,EAAI,EAAGA,EAAIhB,EAAWgB,IAC7B,IAAK,IAAIe,EAAI,EAAGA,EAAI/B,EAAW+B,IACR3B,SAASsB,uBAC5B,iBAAiBV,KAAKe,KAEX,GAAGJ,UAAUK,OACxB,eACA,eACA,sBACA,qB,EAUJC,GApCqB,MACvB,MAAMC,EAAY9B,SAAS+B,eAAe,cAC1CD,EAAUE,UAAY,GAEtBF,EAAUG,MAAMC,oBAAsB,UAAUtC,UAChDkC,EAAUG,MAAME,iBAAmB,UAAUvC,UAE7C,IAAK,IAAIgB,EAAI,EAAGA,EAAIhB,EAAWgB,IAC7B,IAAK,IAAIe,EAAI,EAAGA,EAAI/B,EAAW+B,IAAK,CAClC,MAAMS,EAAepC,SAASqC,cAAc,OAC5CD,EAAab,UAAUC,IAAI,gBAAiB,iBAAiBZ,KAAKe,KAClEG,EAAUQ,YAAYF,E,GAuBxBG,GAMF,MAAMzE,EAAIkC,SAAS+B,eAAe,KAC5BhE,EAAIiC,SAAS+B,eAAe,KAC5BS,EAAWxC,SAAS+B,eAAe,UAErCjE,GAAKC,IACPD,EAAE2E,YAAcnC,IAAmB,GAAGxC,EACtCC,EAAE0E,YAAcnC,IAAmB,GAAGvC,GAExCyE,EAASC,YAAcjE,EAAOS,YAI9BqB,IAAmBoC,KAAI,EAAC5E,EAAEA,EAACC,EAAEA,GAAK6C,KAChC,MAAM+B,EAAe3C,SAASsB,uBAC5B,iBAAiBxD,KAAKC,KAEpB4E,EAAa9B,SACL,IAAND,GACF+B,IAAe,GAAGpB,WAAWC,IAAI,sBAEnCmB,IAAe,GAAGpB,WAAWC,IAAI,gB,IAIrCL,EAAYvC,IAAmB,gBAC/BuC,EAAYtC,IAAwB,uBA9ElBb,EAAUK,eAElBqE,KAAI,EAAC5E,EAAEA,EAACC,EAAEA,GAAK6C,KACvB,MAAMgC,EAAgB5C,SAASsB,uBAC7B,iBAAiBxD,KAAKC,KAEpB6E,EAAc/B,QAChB+B,IAAgB,GAAGrB,WAAWC,IAAI,WAAW,GAwElC,ECxFJqB,EAAgB,KAC3B,MAAM3B,EAAgBZ,IACCvB,EAAQmC,EAAc,GAAI,CAAED,aAAa,IACvCjD,EAAUwB,WAAW0B,EAAc,GAAI,CAAED,aAAa,IAE7EC,EAAc,GAAGpD,EAAI,GACrBoD,EAAc,GAAGnD,EAAI,GACrBmD,EAAc,GAAGpD,GAAK8B,GACtBsB,EAAc,GAAGnD,CACyC,EClBxD+E,EAAkB9C,SAAS+B,eAAe,qBAC1CgB,EAAgB/C,SAAS+B,eAAe,UAE9Ce,EAAgB7C,iBAAiB,SAAUC,IACrC6C,EAAcC,QAChBD,EAAcE,OACdH,EAAgBL,YAAc,gBAE9BM,EAAcG,QACdJ,EAAgBL,YAAc,a,ICTlCU,OAAOlD,iBAAiB,SAOxB,SAAiBC,GACHF,SAASoD,cAAc,wBAAwBlD,EAAEmD,aACxD9B,UAAUK,OAAO,Q,IARxBuB,OAAOlD,iBAAiB,WAExB,SAAmBC,GACLF,SAASoD,cAAc,wBAAwBlD,EAAEmD,aACzD9B,UAAUC,IAAI,Q,ICEb,MAAM5B,EAAY,GACZV,EAAa,EAEnB,IAAIwC,GAAgB,EAQGyB,OAAOG,aANxB,KACXC,IACA9B,IACAC,GAAgB,CAAI,GAGiC,IAAOxC,GAN9D,MAQMqE,EAAS,KACb9C,IACA3B,IACA+D,GAAe","sources":["obstacles.js","points.js","food.js","input.js","snake.js","draw.js","endGame.js","music.js","keys.js","index.js"],"sourcesContent":["let obstaclePositions = [\n  { x: 2, y: 3 },\n  { x: 2, y: 4 },\n  { x: 2, y: 5 },\n]\n\nexport class Obstacles {\n  static #obstacles = obstaclePositions;\n\n  static getObstacles() {\n    return this.#obstacles;\n  }\n\n  static setObstacles(obstacles) {\n    this.#obstacles = obstacles;\n  }\n\n  static onObstacle = (element) => {\n    const obstaclesPosition = this.getObstacles();\n    if (\n      obstaclesPosition.some(\n        (segment) => segment.x === element.x && segment.y === element.y\n      )\n    ) {\n      return true;\n    }\n    return false;\n  };\n}","export class Points {\n  static points = 0;\n\n  static getPoints() {\n    return this.points;\n  }\n\n  static setPoints(points) {\n    this.points = points;\n  }\n}","import { GAME_SIZE, GAME_SPEED } from \"./index.js\";\nimport { Obstacles } from \"./obstacles.js\";\nimport { Points } from \"./points.js\";\nimport { onSnake, expandSnake } from \"./snake.js\";\n\nlet foodPosition = {\n  x: 7,\n  y: 8,\n};\n\nlet extraFoodPosition = {\n  x: 5,\n  y: 6,\n};\n\nexport const getFoodPosition = () => foodPosition;\nexport const getExtraFoodPosition = () => extraFoodPosition;\nexport const setFoodPosition = (newFoodPosition) =>\n  (foodPosition = { ...newFoodPosition });\n\nexport const setExtraFoodPosition = (newFoodPosition) =>\n  (extraFoodPosition = { ...newFoodPosition });\n\nexport const removeExtraFoodPosition = () => extraFoodPosition = null;\n\nexport const update = () => {\n  if (onSnake(getFoodPosition())) {\n    Points.setPoints(Points.getPoints() + GAME_SPEED);\n    expandSnake();\n    respawnFood();\n    if (shouldRespawnExtraFood()) {\n      respawnExtraFood();\n    }\n  }\n  else if (onSnake(getExtraFoodPosition())) {\n    Points.setPoints(Points.getPoints() + 4 * GAME_SPEED);\n    expandSnake();\n    removeExtraFoodPosition();\n  }\n};\n\nconst respawnFood = () => {\n  let newFoodPosition = null;\n  while (newFoodPosition === null || onSnake(newFoodPosition) || Obstacles.onObstacle(newFoodPosition)) {\n    const x = Math.floor(Math.random() * GAME_SIZE);\n    const y = Math.floor(Math.random() * GAME_SIZE);\n    newFoodPosition = { x, y };\n  }\n\n  setFoodPosition(newFoodPosition);\n};\n\nconst shouldRespawnExtraFood = () => {\n  if (getExtraFoodPosition()) {\n    return false;\n  }\n  const POSSIBILITIES = 3;\n  const randomNumber = Math.floor(Math.random() * (POSSIBILITIES - 1));\n\n  return randomNumber % POSSIBILITIES === 0;\n}\n\nconst respawnExtraFood = () => {\n  let newExtraFoodPosition = null;\n  while (newExtraFoodPosition === null || onSnake(newExtraFoodPosition) || Obstacles.onObstacle(newExtraFoodPosition)) {\n    const x = Math.floor(Math.random() * GAME_SIZE);\n    const y = Math.floor(Math.random() * GAME_SIZE);\n    newExtraFoodPosition = { x, y };\n  }\n\n  setExtraFoodPosition(newExtraFoodPosition);\n};\n","import { getSnakePosition } from \"./snake.js\";\n\nexport let inputDirection = { x: -1, y: 0 };\n\ndocument.addEventListener(\"keydown\", (e) => {\n  const key = e.key;\n  switch (key) {\n    case \"ArrowLeft\":\n      if (getInputDirection().y === 0) {\n        inputDirection = { x: 0, y: -1 };\n      }\n      break;\n    case \"ArrowRight\":\n      if (getInputDirection().y === 0) {\n        inputDirection = { x: 0, y: 1 };\n      }\n      break;\n    case \"ArrowUp\":\n      if (getInputDirection().x === 0) {\n        inputDirection = { x: -1, y: 0 };\n      }\n      break;\n    case \"ArrowDown\":\n      if (getInputDirection().x === 0) {\n        inputDirection = { x: 1, y: 0 };\n      }\n      break;\n    default:\n      break;\n  }\n});\n\nexport const getInputDirection = () => inputDirection;\n","import { getFoodPosition } from \"./food.js\";\nimport { getInputDirection } from \"./input.js\";\n\nlet snakePosition = [\n  { x: 10, y: 10 },\n  { x: 11, y: 10 },\n  { x: 12, y: 10 },\n];\n\nexport const getSnakePosition = () => snakePosition;\nexport const setSnakePosition = (newSnakePosition) =>\n  (snakePosition = [...newSnakePosition]);\n\nexport const update = () => {\n  let currentSnakePosition = [...getSnakePosition()];\n\n  const inputDirection = getInputDirection();\n\n  for (let i = currentSnakePosition.length - 2; i >= 0; i--) {\n    currentSnakePosition[i + 1] = { ...currentSnakePosition[i] };\n  }\n\n  currentSnakePosition = currentSnakePosition.slice(1);\n\n  const newHeadPosition = {\n    x: currentSnakePosition[0].x + inputDirection.x,\n    y: currentSnakePosition[0].y + inputDirection.y,\n  };\n\n  setSnakePosition([newHeadPosition, ...currentSnakePosition]);\n};\n\nexport const onSnake = (element, options) => {\n  if (!element) {\n    return false;\n  }\n  const snakePosition = options?.withoutHead\n    ? [...getSnakePosition()].slice(1)\n    : getSnakePosition();\n  if (\n    snakePosition.some(\n      (segment) => segment.x === element.x && segment.y === element.y\n    )\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const expandSnake = () => {\n  const snakePosition = getSnakePosition();\n  snakePosition[snakePosition.length] = snakePosition[snakePosition.length - 1];\n  setSnakePosition(snakePosition);\n};\n","import { getSnakePosition } from \"./snake.js\";\nimport { getExtraFoodPosition, getFoodPosition } from \"./food.js\";\nimport { GAME_SIZE, isGameStarted } from \"./index.js\";\nimport { Points } from \"./points.js\";\nimport { Obstacles } from \"./obstacles.js\";\n\nconst drawElement = (position, className) => {\n  if (position) {\n    const { x, y } = position;\n    const bodyElements = document.getElementsByClassName(\n      `board-element-${x}-${y}`\n    );\n      \n    bodyElements[0].classList.add(className);\n  }\n};\n\nconst drawObstacles = () => {\n  const obstacles = Obstacles.getObstacles();\n\n  obstacles.map(({ x, y }, i) => {\n    const boardElements = document.getElementsByClassName(\n      `board-element-${x}-${y}`\n    );\n    if (boardElements.length) {\n      boardElements?.[0].classList?.add(\"obstacle\");\n    }\n  });\n}\n\n\nconst initialBoardDraw = () => {\n  const gameBoard = document.getElementById(\"game-board\");\n  gameBoard.innerHTML = \"\";\n\n  gameBoard.style.gridTemplateColumns = `repeat(${GAME_SIZE}, 1fr)`;\n  gameBoard.style.gridTemplateRows = `repeat(${GAME_SIZE}, 1fr)`;\n\n  for (let i = 0; i < GAME_SIZE; i++) {\n    for (let j = 0; j < GAME_SIZE; j++) {\n      const boardElement = document.createElement(\"div\");\n      boardElement.classList.add(\"board-element\", `board-element-${i}-${j}`);\n      gameBoard.appendChild(boardElement);\n    }\n  }\n};\n\nconst laterBoardDraw = () => {\n  for (let i = 0; i < GAME_SIZE; i++) {\n    for (let j = 0; j < GAME_SIZE; j++) {\n      const boardElement = document.getElementsByClassName(\n        `board-element-${i}-${j}`\n      );\n      boardElement[0].classList.remove(\n        `body-segment`,\n        `food-segment`,\n        `food-segment--extra`,\n        `body-segment--head`\n      );\n    }\n  }\n};\n\nexport const draw = () => {\n  if (!isGameStarted) {\n    initialBoardDraw();\n  } else {\n    laterBoardDraw();\n  }\n\n  // wynik\n  const x = document.getElementById(\"x\");\n  const y = document.getElementById(\"y\");\n  const pointsEl = document.getElementById(\"points\");\n\n  if (x && y) {\n    x.textContent = getSnakePosition()[0].x;\n    y.textContent = getSnakePosition()[0].y;\n  }\n  pointsEl.textContent = Points.getPoints();\n\n  // end wynik\n\n  getSnakePosition().map(({ x, y }, i) => {\n    const bodyElements = document.getElementsByClassName(\n      `board-element-${x}-${y}`\n    );\n    if (bodyElements.length) {\n      if (i === 0) {\n        bodyElements?.[0].classList?.add(\"body-segment--head\");\n      }\n      bodyElements?.[0].classList?.add(\"body-segment\");\n    }\n  });\n\n  drawElement(getFoodPosition(), 'food-segment');\n  drawElement(getExtraFoodPosition() ,'food-segment--extra');\n  drawObstacles();\n};\n","import { gameIntervelId, GAME_SIZE } from \"./index.js\";\nimport { Obstacles } from \"./obstacles.js\";\nimport { getSnakePosition, onSnake } from \"./snake.js\";\n\nconst restartGame = () => {\n  clearInterval(gameIntervelId);\n  window.location.reload();\n};\n\nexport const checkForDeath = () => {\n  const snakePosition = getSnakePosition();\n  const isHeadIsOnBody = onSnake(snakePosition[0], { withoutHead: true });\n  const isHeadOnObstacle = Obstacles.onObstacle(snakePosition[0], { withoutHead: true });\n  const isSnakeOutsideGame =\n    snakePosition[0].x < 0 ||\n    snakePosition[0].y < 0 ||\n    snakePosition[0].x >= GAME_SIZE ||\n    snakePosition[0].y >= GAME_SIZE;\n  if (isHeadIsOnBody || isSnakeOutsideGame || isHeadOnObstacle) {\n    // confirm(\"Koniec gry.\", restartGame());\n  }\n};","const playButtonMusic = document.getElementById('play-music-button');\nconst playerElement = document.getElementById('player');\n\nplayButtonMusic.addEventListener('click', (e) => {\n  if (playerElement.paused) {\n    playerElement.play();\n    playButtonMusic.textContent = 'Pause music';\n  } else {\n    playerElement.pause();\n    playButtonMusic.textContent = 'Play music';\n  }\n})","window.addEventListener('keyup', arrowUp)\nwindow.addEventListener('keydown', arrowDown)\n\nfunction arrowDown(e) {\n  const key = document.querySelector(`.arrow-key[data-key=\"${e.keyCode}\"]`);\n  key.classList.add('press')\n}\nfunction arrowUp(e) {\n  const key = document.querySelector(`.arrow-key[data-key=\"${e.keyCode}\"]`);\n   key.classList.remove('press')\n}","import { draw } from \"./draw.js\";\nimport { checkForDeath } from \"./endGame.js\";\nimport { update as updateFood } from \"./food.js\";\nimport { update as updateSnake, getSnakePosition, onSnake } from \"./snake.js\";\nimport '/music.js';\nimport './keys.js';\n\nexport const GAME_SIZE = 11;\nexport const GAME_SPEED = 2;\n\nexport let isGameStarted = false;\n\nconst main = () => {\n  update();\n  draw();\n  isGameStarted = true;\n};\n\nexport const gameIntervelId = window.setInterval(main, 1000 / GAME_SPEED);\n\nconst update = () => {\n  updateSnake();\n  updateFood();\n  checkForDeath();\n};\n"],"names":["$5ec5607e7d6e563f$var$obstaclePositions","x","y","$5ec5607e7d6e563f$export$c7227c6e188ae97","static","this","obstacles","element","getObstacles","some","segment","$624917c8880ee964$export$1c787534cb11aa3e","points","$21581845d3143e01$var$foodPosition","$21581845d3143e01$var$extraFoodPosition","$21581845d3143e01$export$8375afbb03ac9b4c","$21581845d3143e01$export$5321e2bda8575dc2","$21581845d3143e01$export$722fbec263ad908a","$1bf822d9f03f4d1a$export$f7d30169ae36e02","setPoints","getPoints","$dad545c909cfec2d$export$3bd73fc649e9ea1a","$1bf822d9f03f4d1a$export$5fc696b6f0d49101","$21581845d3143e01$var$respawnFood","$21581845d3143e01$var$shouldRespawnExtraFood","$21581845d3143e01$var$respawnExtraFood","newFoodPosition","onObstacle","Math","floor","random","$dad545c909cfec2d$export$38f891585d03ce96","$21581845d3143e01$export$4bcd21458045eba4","newExtraFoodPosition","$0379ede947de91ce$export$78f72aca15d2b8f4","document","addEventListener","e","key","$0379ede947de91ce$export$9d5f40eb85689d16","$1bf822d9f03f4d1a$var$snakePosition","$1bf822d9f03f4d1a$export$ded1d07c75c5d29c","$1bf822d9f03f4d1a$export$28be8c991e35b4e3","newSnakePosition","$1bf822d9f03f4d1a$export$722fbec263ad908a","currentSnakePosition","inputDirection","i","length","slice","newHeadPosition","options","withoutHead","snakePosition","$ac3888ccbf49bedd$var$drawElement","position","className","getElementsByClassName","classList","add","$ac3888ccbf49bedd$export$e529deb2bfd496dc","$dad545c909cfec2d$export$1568090200b360fa","j","remove","$ac3888ccbf49bedd$var$laterBoardDraw","gameBoard","getElementById","innerHTML","style","gridTemplateColumns","gridTemplateRows","boardElement","createElement","appendChild","$ac3888ccbf49bedd$var$initialBoardDraw","pointsEl","textContent","map","bodyElements","boardElements","$001607953185f538$export$e8a062691e6558ed","$5f26008d3422c6a9$var$playButtonMusic","$5f26008d3422c6a9$var$playerElement","paused","play","pause","window","querySelector","keyCode","setInterval","$dad545c909cfec2d$var$update"],"version":3,"file":"index.bc967803.js.map"}